@model OnlineSinavSistemi.Core.Models.Sinav

@{
    ViewData["Title"] = "Yeni Sınav Oluştur";
}

<div class="container">
    <h1 class="my-4">Yeni Sınav Oluştur</h1>
    
    <form asp-action="Create" method="post" autocomplete="off">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Sınav Bilgileri</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label asp-for="Baslik" class="form-label">Sınav Başlığı</label>
                    <input asp-for="Baslik" class="form-control" required />
                    <span asp-validation-for="Baslik" class="text-danger"></span>
                </div>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Sorular</h5>
            </div>
            <div class="card-body">
                <div id="sorular-container">
                    <div class="soru-grubu border p-3 mb-3 rounded">
                        <h5 class="mb-3">Soru #1</h5>
                        
                        <div class="mb-3">
                            <label class="form-label">Soru Metni</label>
                            <input name="Sorular[0].Metin" class="form-control" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">A Şıkkı</label>
                            <input name="Sorular[0].Secenekler[0]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">B Şıkkı</label>
                            <input name="Sorular[0].Secenekler[1]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">C Şıkkı</label>
                            <input name="Sorular[0].Secenekler[2]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">D Şıkkı</label>
                            <input name="Sorular[0].Secenekler[3]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Doğru Cevap</label>
                            <select name="Sorular[0].DogruCevap" class="form-control dogru-cevap" required>
                                <option value="">Doğru cevabı seçin</option>
                            </select>
                        </div>
                    </div>
                </div>
                
                <button type="button" id="yeni-soru-ekle" class="btn btn-success">
                    <i class="bi bi-plus-circle"></i> Yeni Soru Ekle
                </button>
            </div>
        </div>
        
        <div class="d-flex mb-5">
            <button type="submit" class="btn btn-primary me-2">
                <i class="bi bi-save"></i> Sınavı Kaydet
            </button>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Listeye Dön
            </a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // İlk sorunun doğru cevap listesini doldur
            updateDogruCevapListesi(0);
            
            // Yeni soru ekle butonuna tıklandığında
            document.getElementById('yeni-soru-ekle').addEventListener('click', function() {
                const soruContainer = document.getElementById('sorular-container');
                const soruSayisi = soruContainer.querySelectorAll('.soru-grubu').length;
                const yeniSoruIndex = soruSayisi;
                
                const yeniSoruHTML = `
                    <div class="soru-grubu border p-3 mb-3 rounded">
                        <h5 class="mb-3">Soru #${yeniSoruIndex + 1}</h5>
                        
                        <div class="mb-3">
                            <label class="form-label">Soru Metni</label>
                            <input name="Sorular[${yeniSoruIndex}].Metin" class="form-control" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">A Şıkkı</label>
                            <input name="Sorular[${yeniSoruIndex}].Secenekler[0]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">B Şıkkı</label>
                            <input name="Sorular[${yeniSoruIndex}].Secenekler[1]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">C Şıkkı</label>
                            <input name="Sorular[${yeniSoruIndex}].Secenekler[2]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">D Şıkkı</label>
                            <input name="Sorular[${yeniSoruIndex}].Secenekler[3]" class="form-control secenek" required />
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Doğru Cevap</label>
                            <select name="Sorular[${yeniSoruIndex}].DogruCevap" class="form-control dogru-cevap" required>
                                <option value="">Doğru cevabı seçin</option>
                            </select>
                        </div>
                    </div>
                `;
                
                soruContainer.insertAdjacentHTML('beforeend', yeniSoruHTML);
                
                // Yeni eklenen sorunun doğru cevap listesini doldur
                updateDogruCevapListesi(yeniSoruIndex);
                
                // Yeni eklenen sorunun şık değişikliklerini dinle
                const yeniSoru = soruContainer.lastElementChild;
                const yeniSecenekler = yeniSoru.querySelectorAll('.secenek');
                yeniSecenekler.forEach(secenek => {
                    secenek.addEventListener('input', function() {
                        updateDogruCevapListesi(yeniSoruIndex);
                    });
                });
            });
            
            // Şık değişikliklerini dinle (ilk soru için)
            const ilkSoruSecenekler = document.querySelectorAll('.soru-grubu:first-child .secenek');
            ilkSoruSecenekler.forEach(secenek => {
                secenek.addEventListener('input', function() {
                    updateDogruCevapListesi(0);
                });
            });
            
            // Doğru cevap listesini güncelleme fonksiyonu
            function updateDogruCevapListesi(soruIndex) {
                const soru = document.querySelectorAll('.soru-grubu')[soruIndex];
                const secenekler = soru.querySelectorAll('.secenek');
                const dogruCevapSelect = soru.querySelector('.dogru-cevap');
                
                // Mevcut seçili değeri sakla
                const secilenDeger = dogruCevapSelect.value;
                
                // Listeyi temizle (ilk seçenek hariç)
                while (dogruCevapSelect.options.length > 1) {
                    dogruCevapSelect.remove(1);
                }
                
                // Girilen şıkları doğru cevap listesine ekle
                secenekler.forEach((secenek, index) => {
                    const deger = secenek.value.trim();
                    if (deger) {
                        const option = new Option(deger, deger);
                        dogruCevapSelect.add(option);
                        
                        // Önceden seçili olan değeri tekrar seç
                        if (deger === secilenDeger) {
                            option.selected = true;
                        }
                    }
                });
            }
        });
    </script>
} 